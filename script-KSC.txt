#Search number in log hotspot

  :local smtpserv [:resolve "mail.yyy.com"];

  :local Eaccount "xxx@yyy.com";

  :local passwd "xxxxx";

 :foreach line in=[/log find buffer=hotspot message~"login failed: no more sessions are allowed"] do={
	:do {:local content [/log get $line message];
	:put $content;  
  :local pos1 [:find $content " (" 0];
  :put $pos1;
  :if ($pos1 != " ") do={ 
   :local uname ""; 
   :local uname7 "";
   :local uname8 "";
   :local uname9 "";
   :local phone ""; 
   :local mess "";
   :local mess1 "Достигнут+лимит+подключений+на+логин+";
   :local mess2 ".+Если+сессии+заняты+не+вашими+устройствами,+то+запросите+код+заново+и+авторизуйтесь+повторно.+Если+данное+сообщение+приходит+и+после+этого,+обратитесь+в+отдел+НОО.+С+уважением,+ФИЦ+КНЦ+РАН";
    :set uname [:pick $content ($pos1-12) ($pos1-0)];
    :put $uname;
	:set mess ($mess1 . $uname . $mess2);
	:put $mess;
	##SMS
	do {/tool fetch mode=http url="http://sms.ksc.loc/api.php"  http-method=post  http-data="phone=$uname&message=$mess" keep-result=no} on-error={};
	#Email
    do {/tool e-mail send from=router@ksc.ru to=root@ksc.ru server=$smtpserv port=25 user=$Eaccount password=$passwd subject="У пользователя $uname лимит сессий исчерпан" body="У пользователя Wi-Fi $uname исчерпан лимит сессий."} on-error={};
  }
  # Clear hostpot log

/system logging action set hotspot memory-lines=1;
/system logging action set hotspot memory-lines=1000;
  }
  }

:foreach line in=[/log find buffer=hotspot message~"trying to log in by http-pap"] do={
#:foreach line in=[/log find buffer=hotspot message~"login failed: invalid username or password"] do={
 :do {:local content [/log get $line message];
  :put $content;  
  :local pos2 [:find $content "_email"];
  :put $pos2;
  :local pos1 [:find $content " (" 0];
  :put $pos1;
  :if ($pos1 != " ") do={ 
   :local uname ""; 
   :local uname7 "";
   :local uname8 "";
   :local uname9 "";
   :local phone ""; 
   :local mess "";
   :local mess1 "Ваш+пароль+от+WiFi:+";
   :local mess2 "+.Он+станет+недействительным,+если+не+подключаться+к+сети+более+3+дней.+Максимальное+количество+устройств+на+логин+2.+С+уважением,+ФИЦ+КНЦ+РАН";
    :set uname [:pick $content ($pos1-12) ($pos1-0)];  
    :put $uname;
    #Password generation 
	:local ruleprefix "random-";
	:put "list rules to void unseen changes";

	/ip firewall filter print without-paging;

	:put "set up password length"
	:local passlen
	if ([:tostr $passlen]="") do={:set passlen 4}

	:put "make passthrough rules if none. according to passlen"
	:for i from=1 to=$passlen do={
		:local coment ($ruleprefix.[:tostr $i])
		if ([/ip firewall filter find comment=$coment]="") do={
			/ip firewall filter add action=passthrough chain=forward place-before=0 random=($i+1) comment=$coment
		}
	}
                :delay 2;
	:put "define char table"
	:global chArray
	if ([:tostr $chArray]="") do={:set chArray 1,2,3,4,5,6,7,8,9,0}

	:put "count letters"
	:local letters ( [:len $chArray ] - 1 )

	:global pass
	:set pass ""
	:put "generate new password"
	:for i from=1 to=$passlen do={
		:local chnum [/ip firewall filter get [find comment=($ruleprefix.[:tostr $i])] packets ]
		if ( chnum > $letters ) do={
			:set chnum ( chnum - $letters * ( chnum / $letters ) )
			# need to reset?
			#/ip firewall filter reset-counters [find comment=($ruleprefix.[:tostr $i])]
		}
		:set pass [:tostr ( $pass . [ :tostr [ :pick $chArray $chnum ] ] ) ]
	}
	/ip firewall filter remove [ find comment~$ruleprefix ]
    # Password generation ends
    :put $pass;
    :set mess ($mess1 . $pass . $mess2);
#     :set mess ("Your+password+is+" . $pass);
 #    :set mess $pass;
    :put $mess;
#    :log info "$mess";

    #Add user to hotspot / user-manager 

    do {/ip hotspot user add name=$uname} on-error={};
    do {/ip hotspot user set password=$pass numbers=[find name=$uname]} on-error={};
    #do {/tool user-manager user add username=$uname password=$pass customer=admin copy-from=test disabled=no phone=$uname;} on-error={};
    #do {/tool user-manager user set password=$pass number=[find username=$uname]} on-error={}; 
    ##SMS.ru
    #do {/tool fetch url="http://sms.ksc.loc/index.php\?phone=$uname&message=$mess" keep-result=no} on-error={};
    do {/tool fetch mode=http url="http://sms.ksc.loc/api.php"  http-method=post  http-data="phone=$uname&message=$mess" keep-result=no} on-error={};
    #do {/tool sms send usb1 phone-number="$uname7" message="login $uname password $pass"} on-error={};
     :if ([:len $pos2] != 0) do={
      :log info "Sending email to administrator!";
     #Email
     do {/tool e-mail send from=xxx@yyy.com to=asf@yyy.com cc=asf2@yyy.com server=$smtpserv port=25 user=$Eaccount password=$passwd subject="=?UTF-8?B?0J3QvtCy0YvQuSDQv9C+0LvRjNC30L7QstCw0YLQtdC70YwgV2ktRmkg0YEg0L3QvtC80LXRgNC+0Lwg0YLQtdC70LXRhNC+0L3QsA==?= $uname\r\nContent-type: text/plain;charset=windows-1251" body=Эздравствуйте!\r\n\r\nу нового пользователя Wi-Fi возникли проблемы с доставкой СМС. Ждите обращения.\r\nЛогин: $uname\r\nПароль: $pass"} on-error={}
    }
    #Email
    #do {/tool e-mail send from=xxx@yyy.com to=asf@yyy.com server=$smtpserv port=25 user=$Eaccount password=$passwd subject="Новый пользователь Wi-Fi с номером телефона $uname" body="Авторизован новый пользователь Wi-Fi.\r\nЛогин: $uname\r\nПароль: $pass"} on-error={};    
  }
# Clear hostpot log

/system logging action set hotspot memory-lines=1;
/system logging action set hotspot memory-lines=1000;
 }
}

